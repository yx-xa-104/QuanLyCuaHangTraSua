<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnUpload.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfpBgsEIDrxX8eHAAABk0lEQVRIS62VPU4DQQyFQ8Kf4BrQ
        AhUFFT2UCBC/gpqCEomrcA8kRAcHgEPQU9N86Ft5YTK7bGZJLD1p4rHfm/HYm8GgwIBWzMQSwkXgLrA0
        E5HsxLfAV8D1dDfJyA+BT37Ntb7/iyTJu8AH8Aq8BV7C595UAnPAA/AObAGPAdf63DMmT29aVpIU68Aa
        MA88BVzrcy+PH79RvhEYBlKfXVQLuM7jq5vkSH8sA5vAPnAMnAHbBQLGGGuOuXLINSag4wC4B26AK+Cy
        h4Cx5pgrh1yVSB20ERs7wAqwAIwSki4BYaw55sohl5w/AnuhbkCaWCqQYjW4LFcl4AMdxRU9RdpcaSM0
        BHKLODnkknOow+udABd1WXLrKSCHXHKOascpcD5BwJM9B7puKodccvYSsM+trWid3mkFGsitS6DkDRrI
        LREYe4O6i67/qm2phUCji4Q9a23t4cZJe8JZksvZap1kRepJ7oPOSW77FllHH6sExnZ+i2oRVS2X9fOR
        7IQSGGuOuXI0vqY5fPi8BJOQ/39U+Aa6CEEn6lMhbAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfpBgsAMRqe4WyDAAACjUlEQVRYR9WXu65NURSGT4GKSGgU
        ouAB3F4BT+FS8Aw4Wh0d0aJEg0a8AC21W+JSkaBRCZ98J2PuzDP22tZce62zw5+MnLXXHuOf/5lzzDHG
        Xlv7XwE02ZYiLxa2HdgD7A/z2XfZL9ONQyLfBhwHLgOPgZfAm7AXwKP4Th99pxWVxBwF7gBf6Ic+dyNm
        GlFpV84DH9Kiv4BvwEfgUzz7roYxF+rdWgpJzEXgR7WIC98DzsbRHAQOxbPvHgDfK39j5VhOVDomd6YW
        8ww4kfMj2Q7gJPA8iZJr5teMKsjzf1+RmsQHsoCOuGL6GlMg15Ec14sIcAdM4AJ3ZpOYRegQZWzB7UFH
        VxEdq26T+XCqRUxBEuXxmXfic3A38dQk1pICk3RW8FpRcRnrJSiQu42rIngYwV5jb04bQUIl6nRVEuTe
        +Ad7EcG2ACuwcKu9zmMFyVGOTW7XyO7ziGD70tsItuhZZ7JrM4LTOiWXkNs1sus8ViTIvjdI0CqObG8T
        XwSbcKWgmYhnJhDkxShJLfegpNbWI1h4Zae89leauSoSi5dFTLjVFrfZ932ofSO2NFuLbXthFOG8Va1D
        zo3W0YyKzEZYN1enwTHN9d2Y5lqsa/zwCDpn5zC/y+OHeArsrn2bUQV1DWjmg/3tXFxna0w9oN1PA1rB
        T+AWsGuwIJFEOYZ2jbBfo+BpXSOsx/QkxIjfU4nSHNgc3FuGfG+os8/hWPxGJXZO1CBhSZT54bV1hDDJ
        /eljm9GswL67FD71mLszifLvzXg/WlQtrumH4l9E+Xk5UaJjkYW2IGZ6UctiiKiVoUfUtcFVfCx6ju8V
        sG+lgkSHqOvAa+Bq81gyNZIoRbgzg0ecSZFEbbJ/En8APqFKok0ruVYAAAAASUVORK5CYII=
</value>
  </data>
</root>